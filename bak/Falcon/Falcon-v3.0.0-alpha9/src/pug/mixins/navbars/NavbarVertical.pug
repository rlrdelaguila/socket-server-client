include Mixins

mixin LinkTopParent(config)
  - var config = Object.assign({}, config)
  - var { url, icon, text, badge, hasHash, isDisabled } = config;
  a.nav-link(
    href=hasHash ? url : `${CWD}${url}.html` 
    class=isDisabled ? 'nav-link-disable' : false
  )&attributes(attributes)
    .d-flex.align-items-center
      span.nav-link-icon
        span(class=icon)
      span.nav-link-text 
        +cleanText(text)
      if badge
        span.badge.rounded-pill.ml-2(class=`badge-soft-${badge.type}`)=badge.text

mixin LinkChild(config)
  - var config = Object.assign({}, config)
  - var { url, text, badge, hasHash, isDisabled} = config;
  a.nav-link(href=hasHash ? url : `${CWD}${url}.html` class=isDisabled ? 'nav-link-disable' : false)&attributes(attributes)
    if badge
      .d-flex.align-items-center
        +cleanText(text)
        span.badge.rounded-pill.ml-2(class=`badge-soft-${badge.type}`)=badge.text
    else
      +cleanText(text)

mixin Looper(object)
  each key in object
    if (sitemap[key].inners)
      li.nav-item
        +LinkTopParent({
          url: `#${key}`, 
          icon: sitemap[key].icon, 
          text: key, 
          badge: sitemap[key].badge, 
          hasHash: true, 
          isDisabled: sitemap[key].disabled
        }).dropdown-indicator(
          data-toggle="collapse" 
          role="button" 
          aria-expanded=`${firstParent == key ? true: false}` 
          aria-controls=key
        )

        ul.nav.collapse(class=`${firstParent == key ? 'show': ''}` id=key data-parent="#navbarVerticalCollapse")
          each v, k in sitemap[key].inners
            li.nav-item
              if v.inners
                +LinkChild({
                  url: `#${key}-${k}`,
                  text: k,
                  badge: v.badge,
                  isDisabled: v.disabled,
                  hasHash: true
                }).dropdown-indicator(
                  class= `${firstParent == key && currentPage == k ? 'active': ''}`
                  data-toggle='collapse' 
                  role='button' 
                  aria-expanded=`${secondParent == k ? true: false}` 
                  aria-controls=`${key}-${k}`
                )

                ul.nav.collapse(class=`${secondParent == k ? 'show': ''}` id=`${key}-${k}` data-parent=`#${key}`)

                  each i, j in v.inners
                    li.nav-item
                      if i.inners
                        +LinkChild({
                          url: `#${key}-${k}-${j}`,
                          text: j,
                          badge: i.badge,
                          disabled: i.disabled,
                          hasHash: true
                        }).dropdown-indicator(
                          class=`${secondParent == k && currentPage == j ? 'active': ''}`
                          data-toggle='collapse' 
                          role='button' 
                          aria-expanded=`${thirdParent == j ? true: false}` 
                          aria-controls=`${key}-${k}-${j}`
                        )
                        ul.nav.collapse(class=`${thirdParent == j ? 'show': ''}` id=`${key}-${k}-${j}`)
                          each x, y in i.inners
                            li.nav-item
                              +LinkChild({
                                url: `${key}/${k}/${j}`,
                                text: y,
                                isDisabled: x.disabled
                              })
                      else
                        +LinkChild({
                          url: `${key}/${k}/${j}`,
                          text: j,
                          badge: i.badge,
                          isDisabled: i.disabled
                        })(class=`${secondParent == k && currentPage == j ? 'active': ''}`)
              else
                if v === 'dashboard'
                  +LinkChild({
                    url: 'index',
                    text: 'dashboard',
                    isDisabled: v.disabled
                  })(class=`${firstParent == 'home' && currentPage == 'dashboard' ? 'active': ''}`)
                else
                  +LinkChild({
                    url: `${key}/${k}`,
                    text: k,
                    badge: v.badge,
                    isDisabled: v.disabled
                  })(class= `${firstParent == key && currentPage == k ? 'active': ''}`)
          if(key === 'authentication')
            li.nav-item
              +LinkChild({
                url: '#!',
                text: 'in-modal',
                hasHash: true,
              })(data-toggle='modal' data-target="#authentication-modal")
    else
      li.nav-item
        +LinkTopParent({
          url: sitemap[key].link, 
          icon: sitemap[key].icon, 
          text: key, 
          badge: sitemap[key].badge,
          isDisabled: sitemap[key].disabled
        })(class=`${currentPage == key ? 'active': ''}`)


mixin NavbarVertical(config)
  - var config = Object.assign({comboNav: false}, config)

  nav.navbar.navbar-light.navbar-vertical.navbar-expand-xl&attributes(attributes)
    if ENV === 'PROD'
      script.
        var navbarStyle = localStorage.getItem("navbarStyle");
        if (navbarStyle && navbarStyle !== 'transparent') {
          document.querySelector('.navbar-vertical').classList.add(`navbar-${navbarStyle}`);
        }
    .d-flex.align-items-center
      .toggle-icon-wrapper
        +NavbarToggleIcon.navbar-vertical-toggle(data-toggle="tooltip" data-placement="left" title="Toggle Navigation")
      +NavbarBrand({ wrapperClass: 'py-3'})
    #navbarVerticalCollapse.collapse.navbar-collapse
      .navbar-vertical-content.scrollbar
        ul.navbar-nav.flex-column
          +Looper(Object.keys(sitemap).splice(0, 8))
        .navbar-vertical-divider
          hr.navbar-vertical-hr.my-2
        ul.navbar-nav.flex-column
          +Looper(Object.keys(sitemap).splice(8, 5))
        .navbar-vertical-divider
          hr.navbar-vertical-hr.my-2
        ul.navbar-nav.flex-column(id=config.comboNav || ENV === 'PROD' ? 'navbarVerticalNav' : false)
          +Looper(Object.keys(sitemap).splice(13))

        .settings
          .navbar-vertical-divider
            hr.navbar-vertical-hr.my-3

          a(href=`https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template/` target="_blank").btn.btn-sm.btn-block.btn-purchase
            | Purchase
